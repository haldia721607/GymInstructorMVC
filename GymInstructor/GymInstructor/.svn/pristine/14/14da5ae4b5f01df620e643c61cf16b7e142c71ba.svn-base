using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;

namespace BOL
{
    public class ValidateFileAttribute : ValidationAttribute
    {
        public override bool IsValid(object value)
        {
            bool IsValid = false;
            int MaxContentLength = 1024 * 1024 * 10; //10 MB
            string[] AllowedFileExtensions = new string[] { ".jpg", "jpeg", ".png" };
            var file = value as HttpPostedFileBase;
            if (!AllowedFileExtensions.Contains(file.FileName.Substring(file.FileName.LastIndexOf('.'))))
            {
                IsValid = false;
            }
            else if (file.ContentLength > MaxContentLength)
            {
                IsValid = false;
            }
            else
            {
                IsValid= true;
            }
            return IsValid;
        }
    }
    public class UpdateUserDetail
    {
        public string Name { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter email id.")]
        [EmailAddress(ErrorMessage = "Enter valid email id.")]
        [MaxLength(100, ErrorMessage = "Name cannot be longer than 100 characters.")]
        public string Email { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter address.")]
        [MaxLength(100, ErrorMessage = "Characters cannot be longer than 100.")]
        public string Address { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please upload image.")]
        [ValidateFile]
        public HttpPostedFileBase Image { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please select DOB")]
        public Nullable<System.DateTime> DOB { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please select gender")]
        public Nullable<int> GenderId { get; set; }
        [MaxLength(10, ErrorMessage = "Characters cannot be longer than 100.")]
        public Nullable<int> Phone { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please select country")]
        public Nullable<int> CountryId { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please select state")]
        public Nullable<int> StateId { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please select city")]
        public Nullable<int> CityId { get; set; }
        [MaxLength(6, ErrorMessage = "Characters cannot be longer than 100.")]
        public Nullable<int> PostalCode { get; set; }
        [MaxLength(100, ErrorMessage = "Characters cannot be longer than 100.")]
        public string LandMark { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<System.DateTime> ModifyDate { get; set; }
        public Nullable<System.DateTime> UserModifyDate { get; set; }
    }
    [MetadataType(typeof(UpdateUserDetail))]
    public partial class UserDetail
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public Nullable<System.DateTime> UserModifyDate { get; set; }
    }
}
